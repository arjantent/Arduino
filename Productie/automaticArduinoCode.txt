// Pin numbers
const int temperaturePin = 1;
const int ldrPin = 0;
const int ledGroen = 8;
const int ledGeel = 9;
const int ledRood = 10;

boolean automatisch = true;
// standaard afstand schermen 
int afstandscherm = 0;
int uitrolafstand = 160;

int ledState = LOW;

int ldrReading = 0;
int countLight = 0;
float countTemp = 0;
int averageTemp = 20;
int averageLight = 800; 

int standaardtemp = 10;
int standaardlux = 500;

// elk "event/timer" (voor input,output) krijgt zijn eigen variabele
unsigned long previousMillis = 0;
unsigned long previousMillis1s = 0;
unsigned long previousMillis40 = 0;
unsigned long previousMillis30 = 0;
unsigned long previousMillis1 = 0;
unsigned long previousMillis10 = 0;
unsigned long previousMillis15 = 0;
unsigned long previousMillis20 = 0;

int interval20 = 20000; // 20sec
int interval40 = 40000; // 40sec
int interval30 = 30000; // 30sec
int interval10 = 10000; // 10sec
int interval15 = 15000; // 15se
int interval1 = 1000; // 1sec
int interval1s = 1000; // 1sec

void setup()
{
  //Start Serial port
  Serial.begin(9600);        // start serial for output - for testing
  pinMode(ledGroen, OUTPUT);
  pinMode(ledGeel, OUTPUT);
  pinMode(ledRood, OUTPUT);
}

void loop()
{   
  

  ldrReading = analogRead(ldrPin);
  float voltage,degreesC;
  voltage = getVoltage(temperaturePin);
  degreesC = (voltage - 0.5) * 100.0;

  // geef huidige tijd
  unsigned long currentMillis = millis();

  // lees waarde van LDR per seconde en stop het in de variabele averageLight
  if((unsigned long)(currentMillis - previousMillis1) >= interval1){
    previousMillis1 = currentMillis;
    countLight += ldrReading;
    countTemp += degreesC;
    delay(1000);

  }
  
  if((unsigned long)(currentMillis - previousMillis10) >= interval10){
    averageLight = countLight / 10;
    countLight = 0;
    previousMillis10 = currentMillis;
  }
  if((unsigned long)(currentMillis - previousMillis15) >= interval15) {
    previousMillis15 = currentMillis;
    averageTemp = countTemp / 15;
    countTemp = 0;
  
  }


 //if((unsigned long)(currentMillis - previousMillis20) >= interval20) {
   // previousMillis20 = currentMillis;

    //if (averageTemp >= standaardtemp && averageLight >= standaardlux) {
     // digitalWrite(ledGroen,HIGH);
     // delay(1000);
     // digitalWrite(ledRood,LOW);
     // for (int i=0; i <4; i++){
     //   Serial.print("hoi");
     // if((unsigned long)(currentMillis - previousMillis1s) >= interval1s){
     // previousMillis1s = currentMillis;
      
   //   if (ledState == LOW){
    //    ledState = HIGH;
    //    }
    //    else{
   //       ledState = LOW;
   //       }
   //   digitalWrite(ledGeel, ledState);
      
  //  }}
 //   digitalWrite(ledGroen, LOW);
  //  digitalWrite(ledRood, HIGH);
 // }
// }


if((unsigned long)(currentMillis - previousMillis20) >= interval20) {
  //uitrollen

  previousMillis20 = currentMillis;
  if (automatisch == true){
    //Serial.println("automatisch");
    //Serial.print(averageTemp);
    //Serial.print(", ");
    //Serial.println(averageLight);
    if(averageTemp >= standaardtemp && averageLight >= standaardlux){
        
        
        if(afstandscherm + uitrolafstand <= 160){
        
        digitalWrite(ledGroen, HIGH);
        digitalWrite(ledRood,LOW);
        afstandscherm += uitrolafstand;
        //Serial.print(afstandscherm);
        }
      }
     //inrollen 
     else if(averageTemp < standaardtemp || averageLight < standaardlux){
        //Serial.print("hij moet nou op rood staan");
        
        
        if(afstandscherm - uitrolafstand >= 0){
          digitalWrite(ledRood, HIGH);
          digitalWrite(ledGroen, LOW);
          afstandscherm -= uitrolafstand;
        }
        }
      } 
     }

    
    
  
  



  if (Serial.available()) {
        char serialListener = Serial.read();
        if (serialListener == 'H') {
            digitalWrite(ledGroen, HIGH);
        }
        else if (serialListener == 'L') {
            digitalWrite(ledGroen, LOW);
        }

        else if(serialListener == 'V') {
          Serial.print(averageLight);
          Serial.print(",");
          Serial.print(averageTemp);
          Serial.print("\n");
         }

         else if(serialListener == 'X') {
          Serial.println(standaardtemp);
         }

         else if(serialListener == 'Y') {
          Serial.println(standaardlux);
         }
         
         else if (serialListener == '1') { //change the standaard + 5
             standaardtemp += 1;
             Serial.println(standaardtemp);          
         }
         else if (serialListener == '2') { //change the standaard + 5
             standaardtemp += 5;
             Serial.println(standaardtemp);          
         }
         else if (serialListener == '3') { //change the standaard -1
             standaardtemp -= 1;
             //Serial.print(standaardtemp);
             //Serial.print("\n");                       
         }
         else if (serialListener == '4') { //change the standaard + 5
             Serial.println(standaardtemp); 
             standaardtemp -= 5;
                      
         }
         else if (serialListener == '5') { //change the standaardtemp naar  + 5
             standaardlux = 0;
             Serial.println(standaardtemp);          
         }
         else if (serialListener == '6') { //change the standaard lux 
             standaardlux = 250;
             Serial.println(standaardlux);          
         }
         else if (serialListener == '7') { //change the standaardlux
             standaardlux = 750;
             Serial.println(standaardlux); 
                      
         }
         else if (serialListener == '8') { //change the standaardlux 
             standaardlux =1000;
             Serial.println(standaardlux);                       
         }

         else if (serialListener == '0') { //change the standaardlux 
             setAutomatisch();

             
                      
         }
         


}
}

boolean setAutomatisch(){
  automatisch =! automatisch;
  }

float getVoltage(int pin)
{
  return (analogRead(pin) * 0.004882814);
}